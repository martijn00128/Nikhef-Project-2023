#include <iostream>

#include "G4RunManager.hh"
#include "G4UImanager.hh"
#include "G4VisManager.hh"
#include "G4VisExecutive.hh"
#include "G4UIExecutive.hh"

#include "construction.hh"
#include "physics.hh"
#include "action.hh"

int main(int argc, char** argv)
{
	G4RunManager *runManager = new G4RunManager();	

	runManager->SetUserInitialization(new NikhefProject());
	runManager->SetUserInitialization(new physics_list());
	runManager->SetUserInitialization(new action_init());

	runManager->Initialize();

	
	G4UIExecutive *ui = new G4UIExecutive(argc, argv);
	
	//G4VisManager *visManager = new G4VisExecutive();
	//visManager->Initialize();

	G4UImanager *UImanager = G4UImanager::GetUIpointer();
	for(int i = 1;i<6;i++){
	G4cout << "The " << i << "/100 simulation" <<G4endl;
	std::fstream file(what, std::ios::app);
	file << "-----------------------------------------================================="<< i << "=================================-----------------------------------------"<<std::endl;
	UImanager->ApplyCommand("/run/beamOn 1");
	file.close();
	}
	std::fstream file(what, std::ios::app);
	file << "-----------------------------------------=================================END FILE=================================-----------------------------------------"<<std::endl;
	file.close();
	
	/*
	UImanager->ApplyCommand("/vis/open OGL");
	UImanager->ApplyCommand("/vis/viewer/set/viewpointVector 1 1 1");
	UImanager->ApplyCommand("/vis/drawVolume");
	UImanager->ApplyCommand("/vis/viewer/set/autoRefresh true");
	UImanager->ApplyCommand("/vis/scene/add/trajectories smooth");
	*/
	//ui->SessionStart();
	
	return 0;
}
